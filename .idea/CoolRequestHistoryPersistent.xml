<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;270974\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,33,31,706775000],&quot;historyId&quot;:&quot;f3c8fa0b-c265-470e-87af-887bdb79db7c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;270974\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,32,47,40298000],&quot;historyId&quot;:&quot;6d2f3642-a7d4-4389-ae17-ffbc22eef6ea&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;4ec1465cae4426ae1f408cc4e9eb6a4e&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login/verify/code&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;根据手机号获取验证码&quot;,&quot;description&quot;:&quot;根据手机号获取验证码&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login/verify/code&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;phone&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;15857108029&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,32,27,514720000],&quot;historyId&quot;:&quot;1b97e1c2-4e50-4330-ab2a-c88716874e56&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;305490\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,31,56,716527000],&quot;historyId&quot;:&quot;24099091-aeec-4ed9-9c0c-d0c0b0c1fe37&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;305490\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,28,17,390201000],&quot;historyId&quot;:&quot;0d6b54d8-e56c-4d14-a37b-a09a96ae9663&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;305490\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,27,44,290218000],&quot;historyId&quot;:&quot;2c54a539-b31c-4002-8b0d-ef1b5c8bbfc6&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;429caaebd2bd52f3ae4f79a2ca6d6b1b&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;登录接口&quot;,&quot;description&quot;:&quot;登录接口&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;verifyCode\&quot; : \&quot;456789\&quot;,\n  \&quot;phone\&quot; : \&quot;15857108029\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,27,40,478599000],&quot;historyId&quot;:&quot;5b170e5e-d00b-4abf-8262-80737918ac6e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;4ec1465cae4426ae1f408cc4e9eb6a4e&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login/verify/code&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;根据手机号获取验证码&quot;,&quot;description&quot;:&quot;根据手机号获取验证码&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login/verify/code&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;phone&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;15857108029&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,26,46,180368000],&quot;historyId&quot;:&quot;9b80172f-edd6-40c6-a571-3f535862be87&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;4ec1465cae4426ae1f408cc4e9eb6a4e&quot;,&quot;moduleName&quot;:&quot;willian-coding-spring-boot-data-redis&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:9981,&quot;url&quot;:&quot;/user/login/verify/code&quot;,&quot;simpleClassName&quot;:&quot;cn.willian.coding.redis.controller.UserController&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;根据手机号获取验证码&quot;,&quot;description&quot;:&quot;根据手机号获取验证码&quot;,&quot;methodName&quot;:&quot;sendVerifyCode&quot;,&quot;className&quot;:null},&quot;host&quot;:null,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:9981/user/login/verify/code&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;phone&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;322323&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:9981,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2024,10,27,9,26,31,109136000],&quot;historyId&quot;:&quot;a0cfd490-9d82-40e1-8116-43b55b2774c0&quot;}]" />
  </component>
</project>